@page "/ProdutoPage"

<PageTitle>Produtos</PageTitle>

<div class="card mb-4 shadow-sm mx-auto col-md-6">
    <div class="card-header d-flex justify-content-between align-items-center" style="background-color: #05163D; color: honeydew;">
        <h2>Cadastro de Produtos</h2>
    </div>
    <div class="card-body text-center">
        <p class="text-muted">
            <b>Aqui você pode gerenciar os dados dos produtos e controlar o estoque de forma eficiente.</b>
        </p>
    </div>
</div>

<div class="card shadow-sm">
    <div class="card-header d-flex justify-content-between align-items-center" style="background-color: #0A2464; color: honeydew;">
        <h2>Detalhes dos Produtos</h2>
        <button class="btn btn-info" @onclick="AddProduct">Incluir Novo Produto</button>
    </div>
    <div class="card-body">
        @if (Products.Count > 0)
        {
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Nome</th>
                        <th>Descrição</th>
                        <th>Preço</th>
                        <th>Ações</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var product in Products)
                    {
                        <tr>
                            <td>@product.Id</td>
                            <td>@product.Name</td>
                            <td>@product.Description</td>
                            <td>R$ @product.Price.ToString("F2")</td>
                            <td>
                                <button class="btn btn-sm btn-warning" @onclick="() => EditProduct(product.Id)">Editar</button>
                                <button class="btn btn-sm btn-danger" @onclick="() => DeleteProduct(product.Id)">Excluir</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p class="text-muted text-center">Nenhum produto cadastrado.</p>
        }
    </div>
</div>

@code {
    private List<Product> Products = new()
    {
        new Product { Id = 1, Name = "Salgadinho fofura", Description = "120g", Price = 12.00m },
        new Product { Id = 2, Name = "Elma Chips Ruffles", Description = "200g", Price = 15.99m },
        new Product { Id = 3, Name = "Suspiro Dourado", Description = "80g", Price = 9.99m }
    };

    private void AddProduct()
    {
        // Simular ação de adição
        Console.WriteLine("Adicionando novo produto");
    }

    private void EditProduct(int productId)
    {
        // Simular ação de edição
        Console.WriteLine($"Editando produto com ID: {productId}");
    }

    private void DeleteProduct(int productId)
    {
        // Simular ação de exclusão
        Console.WriteLine($"Excluindo produto com ID: {productId}");
        Products.Remove(Products.First(p => p.Id == productId));
    }

    private class Product
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public string Description { get; set; }
        public decimal Price { get; set; }
    }
}


